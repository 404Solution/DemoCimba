version: 2.1

executors:
  py_cimg:
    docker:
      - image: cimg/python:3.11

commands:
  install_bazel:
    description: "Install Bazel"
    steps:
      - run:
          name: Install Bazel
          command: |
            sudo apt-get update
            sudo apt-get install -y curl gnupg apt-transport-https
            curl -fsSL https://bazel.build/bazel-release.pub.gpg | sudo gpg --dearmor -o /usr/share/keyrings/bazel-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
            sudo apt-get update && sudo apt-get install -y bazel

jobs:
  build_test:
    executor: py_cimg
    steps:
      - checkout
      - install_bazel
      - run:
          name: Bazel build (Python + C++)
          command: |
            bazel build //src/python:app //src/cpp:hello_lib
      - run:
          name: Bazel tests
          command: |
            bazel test //src/python:app_test //src/cpp:hello_test --test_output=errors
      - run:
          name: Package artifacts
          command: |
            chmod +x scripts/package_artifacts.sh
            ./scripts/package_artifacts.sh
      - store_artifacts:
          path: dist/artifacts.tar.gz
          destination: artifacts/artifacts.tar.gz
      - run:
          name: Publish to JFrog (only on main and if env vars exist)
          command: |
            if [ "${CIRCLE_BRANCH}" = "main" ] && [ -n "${JFROG_URL:-}" ] && [ -n "${JFROG_USER:-}" ] && [ -n "${JFROG_API_KEY:-}" ]; then
              echo "Publishing to JFrog..."
              curl -u "$JFROG_USER:$JFROG_API_KEY" \
                   -T dist/artifacts.tar.gz \
                   "https://${JFROG_URL}/artifactory/libs-release-local/sample/artifacts-$(date +%Y%m%d%H%M%S).tar.gz"
            else
              echo "Skip publish (not main branch or env vars missing)."
            fi

workflows:
  bazel_ci:
    jobs:
      - build_test
